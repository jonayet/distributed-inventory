{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UInt32": {
				"type": "integer",
				"format": "int32",
				"default": "0",
				"description": "Unsigned Integer",
				"minimum": 0
			},
			"UFloat32": {
				"type": "number",
				"format": "float",
				"default": "0",
				"description": "Unsigned Decimal",
				"minimum": 0
			},
			"Product": {
				"properties": {
					"productId": {
						"type": "string"
					},
					"available": {
						"$ref": "#/components/schemas/UInt32"
					},
					"price": {
						"$ref": "#/components/schemas/UFloat32"
					}
				},
				"required": [
					"productId",
					"available",
					"price"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Inventory": {
				"properties": {
					"inventory": {
						"items": {
							"$ref": "#/components/schemas/Product"
						},
						"type": "array"
					},
					"currency": {
						"type": "string"
					},
					"$pagination": {
						"properties": {
							"remainingItems": {
								"$ref": "#/components/schemas/UInt32"
							}
						},
						"required": [
							"remainingItems"
						],
						"type": "object"
					}
				},
				"required": [
					"inventory",
					"currency",
					"$pagination"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthorizationError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/UInt32"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ValidattionError": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Validation failed"
						],
						"nullable": false
					},
					"details": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					}
				},
				"required": [
					"message",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Client": {
				"type": "string",
				"enum": [
					"web",
					"mobile"
				],
				"default": "web"
			},
			"Lang": {
				"type": "string",
				"enum": [
					"en-us",
					"en-gb",
					"de-de",
					"es-es"
				],
				"default": "en-us"
			},
			"OrderItem": {
				"properties": {
					"productId": {
						"type": "string"
					},
					"quantity": {
						"$ref": "#/components/schemas/UInt32"
					}
				},
				"required": [
					"productId",
					"quantity"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ConfirmationLinks": {
				"properties": {
					"confirm": {
						"type": "string"
					},
					"cancel": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"validTill": {
						"type": "string"
					}
				},
				"required": [
					"confirm",
					"cancel",
					"status",
					"validTill"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PendingOrderResponse": {
				"properties": {
					"availableItems": {
						"items": {
							"$ref": "#/components/schemas/OrderItem"
						},
						"type": "array"
					},
					"unavailableItems": {
						"items": {
							"$ref": "#/components/schemas/OrderItem"
						},
						"type": "array"
					},
					"confirmation": {
						"$ref": "#/components/schemas/ConfirmationLinks"
					}
				},
				"required": [
					"availableItems",
					"unavailableItems",
					"confirmation"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BadRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double",
						"default": 400
					}
				},
				"required": [
					"name",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UUID": {
				"type": "string",
				"minLength": 2
			},
			"PendingOrderStatus": {
				"properties": {
					"items": {
						"items": {
							"$ref": "#/components/schemas/OrderItem"
						},
						"type": "array"
					},
					"confirmation": {
						"$ref": "#/components/schemas/ConfirmationLinks"
					}
				},
				"required": [
					"items",
					"confirmation"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DateTime": {
				"type": "string",
				"description": "DateTime"
			},
			"PendingOrder": {
				"properties": {
					"orderId": {
						"$ref": "#/components/schemas/UUID"
					},
					"validTill": {
						"$ref": "#/components/schemas/DateTime"
					}
				},
				"required": [
					"orderId",
					"validTill"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "access_token",
				"in": "query"
			}
		}
	},
	"info": {
		"title": "distributed-inventory",
		"version": "1.0.0",
		"description": "Distributed inventory service",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Jonayet Hossain",
			"email": "jonayet.hossain@adidas.com"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/inventory": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Inventory"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthorizationError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidattionError"
								}
							}
						}
					}
				},
				"description": "Retrieves the inventory.",
				"tags": [
					"InventoryController"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"description": "Count is used to determine how many quantity will be send.\nIts default value is **5**.",
						"in": "query",
						"name": "count",
						"required": false,
						"schema": {
							"default": 5,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"description": "Page is used to determine to find which segment of data will be provided.\nFor example,\nLets say total number of inventory is 30. If **count** is 10, there will be 3 page segments.\nIn this case, valid page **value** are be 0, 1 and 2.\nThis is an optional parameter, default is 0.",
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/UInt32"
						}
					},
					{
						"description": "Client parameter is used to identify the client. It can be **web** or **mobile**.\nThis is an optional parameter, **web** will be used by default.",
						"in": "query",
						"name": "client",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Client"
						}
					},
					{
						"description": "Lang parameter is used to select the currency for price.\nThis is an optional param, default value is **en-us**.",
						"in": "query",
						"name": "lang",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Lang"
						}
					}
				]
			}
		},
		"/order": {
			"post": {
				"operationId": "CreateOrder",
				"responses": {
					"201": {
						"description": "Order created",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/PendingOrderResponse"
										},
										{
											"properties": {
												"message": {
													"type": "string"
												}
											},
											"required": [
												"message"
											],
											"type": "object"
										}
									]
								}
							}
						}
					},
					"202": {
						"description": "Pending order confirmation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PendingOrderResponse"
								}
							}
						}
					},
					"400": {
						"description": "Invalid order",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequest"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthorizationError"
								}
							}
						}
					}
				},
				"description": "Order controller",
				"tags": [
					"OrderController"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"description": "Client parameter is used to identify the client. It can be **web** or **mobile**.\nThis is an optional parameter, **web** will be used by default.",
						"in": "query",
						"name": "client",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Client"
						}
					}
				],
				"requestBody": {
					"description": "Body is an array of item id and quantity.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/OrderItem"
								},
								"type": "array"
							},
							"example": [
								{
									"productId": "FZ2725",
									"quantity": 2
								},
								{
									"productId": "H67407",
									"quantity": 2
								},
								{
									"productId": "FX7978",
									"quantity": 4
								}
							]
						}
					}
				}
			}
		},
		"/confirm/{orderId}": {
			"post": {
				"operationId": "ConfirmOrder",
				"responses": {
					"201": {
						"description": "Order created",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthorizationError"
								}
							}
						}
					}
				},
				"description": "Confirm order controller",
				"tags": [
					"ConfirmController"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"description": "OrderId is an UUID. It will be used to find the associated pending order.",
						"in": "path",
						"name": "orderId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"description": "Client parameter is used to identify the client. It can be **web** or **mobile**.\nThis is an optional parameter, **web** will be used by default.",
						"in": "query",
						"name": "client",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Client"
						}
					}
				]
			}
		},
		"/cancel/{orderId}": {
			"post": {
				"operationId": "CancelOrder",
				"responses": {
					"200": {
						"description": "Order canceled"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthorizationError"
								}
							}
						}
					}
				},
				"description": "Cancel order controller",
				"tags": [
					"CancelController"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"description": "OrderId is an UUID. It will be used to find the associated pending order.",
						"in": "path",
						"name": "orderId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"description": "Client parameter is used to identify the client. It can be **web** or **mobile**.\nThis is an optional parameter, **web** will be used by default.",
						"in": "query",
						"name": "client",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Client"
						}
					}
				]
			}
		},
		"/status/{orderId}": {
			"get": {
				"operationId": "GetOrderStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PendingOrderStatus"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthorizationError"
								}
							}
						}
					}
				},
				"description": "Status controller",
				"tags": [
					"StatusController"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"description": "OrderId is an UUID. It will be used to find the associated pending order.",
						"in": "path",
						"name": "orderId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					},
					{
						"description": "Client parameter is used to identify the client. It can be **web** or **mobile**.\nThis is an optional parameter, **web** will be used by default.",
						"in": "query",
						"name": "client",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Client"
						}
					}
				]
			}
		},
		"/pending": {
			"get": {
				"operationId": "GetPendingOrders",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/PendingOrder"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthorizationError"
								}
							}
						}
					}
				},
				"description": "Pending order controller",
				"tags": [
					"PendingController"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"description": "Client parameter is used to identify the client. It can be **web** or **mobile**.\nThis is an optional parameter, **web** will be used by default.",
						"in": "query",
						"name": "client",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Client"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:8080/"
		}
	]
}