{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Product": {
				"properties": {
					"productId": {
						"type": "string"
					},
					"available": {
						"type": "integer",
						"format": "int32"
					},
					"price": {
						"type": "integer",
						"format": "int32"
					}
				},
				"required": [
					"productId",
					"available",
					"price"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Inventory": {
				"properties": {
					"inventory": {
						"items": {
							"$ref": "#/components/schemas/Product"
						},
						"type": "array"
					},
					"currency": {
						"type": "string"
					},
					"$pagination": {
						"properties": {
							"remainingItems": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"remainingItems"
						],
						"type": "object"
					}
				},
				"required": [
					"inventory",
					"currency",
					"$pagination"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthorizationError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double",
						"default": 401
					}
				},
				"required": [
					"name",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ValidattionError": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Validation failed"
						],
						"nullable": false
					},
					"details": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					}
				},
				"required": [
					"message",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Client": {
				"type": "string",
				"enum": [
					"web",
					"mobile"
				]
			},
			"Lang": {
				"type": "string",
				"enum": [
					"en-us",
					"en-gb",
					"de-de",
					"es-es"
				]
			},
			"OrderItem": {
				"properties": {
					"productId": {
						"type": "string"
					},
					"quantity": {
						"type": "integer",
						"format": "int32"
					}
				},
				"required": [
					"productId",
					"quantity"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "access_token",
				"in": "query"
			}
		}
	},
	"info": {
		"title": "distributed-inventory",
		"version": "1.0.0",
		"description": "Distributed inventory service",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Jonayet Hossain",
			"email": "jonayet.hossain@adidas.com"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/inventory": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Inventory"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthorizationError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidattionError"
								}
							}
						}
					}
				},
				"description": "Retrieves the inventory.",
				"tags": [
					"InventoryController"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"description": "Count is used to determine how many quantity will be send.\nIts default value is **5**.",
						"in": "query",
						"name": "count",
						"required": false,
						"schema": {
							"default": 5,
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"description": "Page is used to determine to find which segment of data will be provided.\nFor example,\nLets say total number of inventory is 30. If **count** is 10, there will be 3 page segments.\nIn this case, valid page **value** are be 0, 1 and 2.\nThis is an optional parameter, default is 0.",
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 0,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "client parameter is used to identify the client. It can be **web** or **mobile**.\nThis is an optional parameter, **web** will be used by default.",
						"in": "query",
						"name": "client",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Client"
						}
					},
					{
						"description": "Lang parameter is used to select the currency for price.\nThis is an optional param, default value is **en-us**.",
						"in": "query",
						"name": "lang",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Lang"
						}
					}
				]
			}
		},
		"/order": {
			"post": {
				"operationId": "CreateOrder",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthorizationError"
								}
							}
						}
					}
				},
				"tags": [
					"OrderController"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"description": "client parameter is used to identify the client. It can be **web** or **mobile**.\nThis is an optional parameter, **web** will be used by default.",
						"in": "query",
						"name": "client",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Client"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/OrderItem"
								},
								"type": "array"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:8080/"
		}
	]
}